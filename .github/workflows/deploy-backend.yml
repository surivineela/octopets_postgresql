name: Deploy Backend to Azure Container Apps

on:
  push:
    branches: [ main ]
    paths: [ 'backend/**', 'servicedefaults/**', '.github/workflows/deploy-backend.yml' ]
  pull_request:
    branches: [ main ]
    paths: [ 'backend/**', 'servicedefaults/**' ]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: octopetsprod
  CONTAINER_APP_NAME: octopets-prod-api
  RESOURCE_GROUP: octopets-prod-rg
  IMAGE_NAME: octopets-backend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: |
        dotnet restore backend/Octopets.Backend.csproj
        dotnet restore servicedefaults/Octopets.ServiceDefaults.csproj

    - name: Build application
      run: dotnet build backend/Octopets.Backend.csproj --configuration Release --no-restore

    - name: Run tests
      run: dotnet test backend/Octopets.Backend.csproj --configuration Release --no-build --verbosity normal

    - name: Log in to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to Azure Container Registry
      run: |
        az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}

    - name: Build and push Docker image
      run: |
        # Build image
        docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} \
                     -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:latest \
                     -f backend/Dockerfile .
        
        # Push images
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

    - name: Update Container App
      run: |
        az containerapp update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          --output table

    - name: Run Database Migrations
      run: |
        # Get connection string from Key Vault
        CONNECTION_STRING=$(az keyvault secret show \
          --vault-name octopets-prod-kv \
          --name PostgresConnectionString \
          --query value -o tsv)
        
        # Install EF Core tools
        dotnet tool install --global dotnet-ef
        
        # Run migrations
        dotnet ef database update \
          --project backend/Octopets.Backend.csproj \
          --connection "$CONNECTION_STRING"

    - name: Verify deployment
      run: |
        # Get Container App URL
        APP_URL=$(az containerapp show \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --query properties.configuration.ingress.fqdn -o tsv)
        
        # Test health endpoint
        echo "Testing health endpoint: https://$APP_URL/health"
        curl -f "https://$APP_URL/health" || exit 1
        
        echo "âœ… Deployment verified successfully!"
        echo "ðŸ”— Application URL: https://$APP_URL"